# Generated by Django 4.0.2 on 2022-03-10 05:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import user.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('temp_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='temp_password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('mobile', models.CharField(help_text='شماره موبایل (فیلد اصلی یوزرنیم)', max_length=20, unique=True)),
                ('fname', models.CharField(blank=True, help_text='اسم کوچک فارسی', max_length=100, null=True)),
                ('ename', models.CharField(blank=True, help_text='اسم کوچک انگلیسی', max_length=100, null=True)),
                ('flname', models.CharField(blank=True, help_text='نام خانوادگی فارسی', max_length=100, null=True)),
                ('elname', models.CharField(blank=True, help_text='نام خانوادگی انگلیسی', max_length=100, null=True)),
                ('economic_code', models.CharField(blank=True, help_text='کد اقتصادی (حقوقی)', max_length=30, null=True)),
                ('national_id', models.CharField(blank=True, help_text='شناسه ملی (حقوقی)', max_length=30, null=True)),
                ('registration_id', models.CharField(blank=True, help_text='شناسه ثبت (حقوقی)', max_length=30, null=True)),
                ('register_date', models.DateField(blank=True, help_text='تاریخ ثبت (حقوقی)', null=True)),
                ('postal_code', models.CharField(blank=True, help_text='کد پستی (حقوقی)', max_length=100, null=True)),
                ('address_text', models.CharField(blank=True, help_text='آدرس شرکت (حقوقی)', max_length=1500, null=True)),
                ('phone', models.CharField(blank=True, help_text='شماره تلفن ثابت', max_length=30, null=True)),
                ('field_of_work', models.CharField(blank=True, help_text='حوزه\u200cی کاری (حقوقی)', max_length=30, null=True)),
                ('uni_code', models.CharField(blank=True, help_text='کد ملی', max_length=100, null=True)),
                ('email', models.EmailField(blank=True, help_text='ایمیل', max_length=254, null=True)),
                ('email_verified', models.BooleanField(default=False, help_text='ایا ایمیل اعتبارسنجی شده یا خیر')),
                ('birthday', models.DateField(blank=True, help_text='تاریخ تولد (حقیقی)', null=True)),
                ('profile_image', models.ImageField(blank=True, help_text='عکس پروفایل', null=True, upload_to=user.models.user.user_ProfileImage_directory_path, validators=[user.models.user.Validate_Image])),
                ('needs_to_change_pass', models.BooleanField(default=False, help_text='آیا یوزر از فراموشی رمز عبور استفاده کرده و مجبور است رمز خود را عوض کند؟')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('banned', models.BooleanField(default=False, help_text='یوزر از سایت بن شده')),
                ('ban_cause', models.TextField(blank=True, help_text='علت بن شدن یوزر از سایت', null=True)),
                ('is_real', models.BooleanField(default=True, help_text='یوزر حقیقی\u200c است یا حقوقی')),
                ('role', models.SmallIntegerField(choices=[(0, 'کاربر عادی'), (1, 'کاربر داشبورد سازمانی'), (2, 'تحصیل\u200cدار')], default=0, help_text='handling the user kind, role')),
                ('gender', models.BooleanField(blank=True, help_text='male = True, female = False', null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('direct_login', models.BooleanField(blank=True, default=False, null=True)),
                ('access_granted_by', models.ForeignKey(blank=True, help_text='دسترسی به این کاربر آخرین بار توسط چه کسی داده شده است.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_access_granted_by', to=settings.AUTH_USER_MODEL)),
                ('banned_by', models.ForeignKey(blank=True, help_text='یوزر توسط چه کسی بن شده', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_banned_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_userprofile', to='department.department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Captcha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('captcha', models.CharField(blank=True, max_length=200, null=True)),
                ('code', models.CharField(blank=True, help_text='captcha code', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(blank=True, help_text='corportate user files', null=True, upload_to=user.models.user.user_File_directory_path)),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='myauth_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EVFP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
